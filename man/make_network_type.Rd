% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal-utils.R
\name{make_network_type}
\alias{make_network_type}
\title{Convert Network Objects to New Type}
\usage{
make_network_type(obj, input.type, output.type)
}
\arguments{
\item{obj}{A list of network objects, which must match the \code{input.type} specified.}

\item{input.type}{A character string specifying the input type of \code{obj}. Options include \code{"igraph"}, \code{"matrix"}, \code{"dgCMatrix"}, or \code{"edgelist"}.}

\item{output.type}{A character string specifying the desired output type. Options are \code{"igraph"}, \code{"matrix"}, \code{"dgCMatrix"}, or \code{"edgelist"}.}
}
\value{
A converted list of network objects in the specified \code{output.type} format.
}
\description{
Converts an input list of networks between various representations: \code{matrix}, \code{dgCMatrix}, \code{edgelist}, and \code{igraph}.
}
\details{
The function converts each network in \code{obj} to the specified \code{output.type}. Conversion logic is applied based on \code{input.type} and \code{output.type}.
\itemize{
\item If \code{input.type} and \code{output.type} are the same, \code{obj} is returned as is.
\item Conversions from adjacency matrices to igraph objects are handled via \code{igraph::graph_from_adjacency_matrix}.
\item Conversions from igraph objects to edge lists are handled with \code{igraph::as_edgelist}.
\item Conversions from igraph objects to adjacency matrices are handled with \code{igraph::as_adjacency_matrix}.
}

To use \code{"dgCMatrix"} for \code{input.type} or \code{output.type}, the package \code{Matrix} must be installed.
}
\examples{
# Convert list of adjacency matrices to igraph objects
adj_matrices <- replicate(3, matrix(c(0, 1, 1, 0), nrow = 2), simplify = FALSE)
make_network_type(adj_matrices, input.type = "matrix", output.type = "igraph")

# Convert list of igraph objects to sparse adjacency matrices
igraph_list <- lapply(adj_matrices, igraph::graph_from_adjacency_matrix)
make_network_type(igraph_list, input.type = "igraph", output.type = "dgCMatrix")

}
