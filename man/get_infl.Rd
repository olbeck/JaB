% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jab-lm.R
\name{get_infl}
\alias{get_infl}
\title{Calculate given influence/outlier statistic on a linear model object}
\usage{
get_infl(mod, func.name, package.name = NULL, args = NULL)
}
\arguments{
\item{mod}{An \code{lm} object. Output from \link{lm}{stats}.}

\item{func.name}{A character string of the function name used to calculate the desired centrality statistic.}

\item{package.name}{A character string of the name of the package that \code{func.name} function is in. If left as \code{NULL} if the function will be called as loaded in the users environment.}

\item{args}{A named list of additional arguments the \code{func.name} function may need beyond the \code{mod} object.}
}
\value{
A numeric vector of the influence/outlier statistic as calculated by \code{func.name}.
}
\description{
This function is primarily used as an internal function in \link{jab_lm}{JaB}.
}
\examples{
library(stats)
data("LifeCycleSavings")

mod <- lm(sr ~ ., data = LifeCycleSavings)

# defined functions in stats
get_infl(mod, "dffits")
get_infl(mod, "rstudent")


# define the likelihood distance as influence statistic (Cook, 1986)
infl_like <- function(mod){

  n <- length(mod$fitted.values)
  p <- length(mod$coefficients)

  ti <- rstudent(mod)
  h <- hatvalues(mod)

  p1 <- log( (n/(n-1)) * ((n-p-1) / (ti^2 +n-p-1)) )
  p2 <- ti^2 * (n-1) / (1-h) / (n-p-1)

  return(n*p1 + p2 - 1)
}

infl_like(mod)
get_infl(mod, "infl_like")
}
\seealso{
\code{\link[=jab_lm]{jab_lm()}}
}
